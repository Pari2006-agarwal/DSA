#include <stdio.h>

#define MAX 100

int sequence[MAX];
int size = 0;

// Function to insert an element
void insert(int pos, int value) {
    if (size >= MAX) {
        printf("Sequence is full!\n");
        return;
    }
    if (pos < 0 || pos > size) {
        printf("Invalid position!\n");
        return;
    }

    for (int i = size; i > pos; i--) {
        sequence[i] = sequence[i - 1];
    }
    sequence[pos] = value;
    size++;
    printf("Inserted %d at position %d\n", value, pos);
}

// Function to delete an element
void delete(int pos) {
    if (size == 0) {
        printf("Sequence is empty!\n");
        return;
    }
    if (pos < 0 || pos >= size) {
        printf("Invalid position!\n");
        return;
    }

    int deleted = sequence[pos];
    for (int i = pos; i < size - 1; i++) {
        sequence[i] = sequence[i + 1];
    }
    size--;
    printf("Deleted %d from position %d\n", deleted, pos);
}

// Function to display the sequence
void display() {
    if (size == 0) {
        printf("Sequence is empty.\n");
        return;
    }
    printf("Sequence: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", sequence[i]);
    }
    printf("\n");
}

// Main function with a simple menu
int main() {
    int choice, pos, value;

    while (1) {
        printf("\n--- Sequence Operations Menu ---\n");
        printf("1. Insert\n");
        printf("2. Delete\n");
        printf("3. Display\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter position (0 to %d): ", size);
                scanf("%d", &pos);
                printf("Enter value: ");
                scanf("%d", &value);
                insert(pos, value);
                break;
            case 2:
                printf("Enter position (0 to %d): ", size - 1);
                scanf("%d", &pos);
                delete(pos);
                break;
            case 3:
                display();
                break;
            case 4:
                printf("Exiting...\n");
                return 0;
            default:
                printf("Invalid choice!\n");
        }
    }

    return 0;
}

